<?xml version="1.0" encoding="UTF-8"?>
<project version="4">
  <component name="ChangeListManager">
    <list default="true" id="6fdd3211-89b6-43e6-86ae-60249c672f12" name="Default" comment="">
      <change afterPath="$PROJECT_DIR$/src/discourje/twoBuyerProtocol/pipes/ScribbleReplicate.clj" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/.idea/misc.xml" beforeDir="false" afterPath="$PROJECT_DIR$/.idea/misc.xml" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/.idea/workspace.xml" beforeDir="false" afterPath="$PROJECT_DIR$/.idea/workspace.xml" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/src/discourje/twoBuyerProtocol/pipes/simpleSetup.clj" beforeDir="false" afterPath="$PROJECT_DIR$/src/discourje/twoBuyerProtocol/pipes/simpleSetup.clj" afterDir="false" />
    </list>
    <option name="EXCLUDED_CONVERTED_TO_IGNORED" value="true" />
    <option name="SHOW_DIALOG" value="false" />
    <option name="HIGHLIGHT_CONFLICTS" value="true" />
    <option name="HIGHLIGHT_NON_ACTIVE_CHANGELIST" value="false" />
    <option name="LAST_RESOLUTION" value="IGNORE" />
  </component>
  <component name="FUSProjectUsageTrigger">
    <session id="410710807">
      <usages-collector id="statistics.lifecycle.project">
        <counts>
          <entry key="project.closed" value="2" />
          <entry key="project.open.time.14" value="1" />
          <entry key="project.open.time.17" value="1" />
          <entry key="project.opened" value="2" />
        </counts>
      </usages-collector>
      <usages-collector id="statistics.file.extensions.edit">
        <counts>
          <entry key="clj" value="1482" />
        </counts>
      </usages-collector>
      <usages-collector id="statistics.file.types.edit">
        <counts>
          <entry key="Clojure" value="1482" />
        </counts>
      </usages-collector>
      <usages-collector id="statistics.file.extensions.open">
        <counts>
          <entry key="clj" value="3" />
        </counts>
      </usages-collector>
      <usages-collector id="statistics.file.types.open">
        <counts>
          <entry key="Clojure" value="3" />
        </counts>
      </usages-collector>
    </session>
  </component>
  <component name="FileEditorManager">
    <splitter split-orientation="vertical" split-proportion="0.49947533">
      <split-first>
        <leaf SIDE_TABS_SIZE_LIMIT_KEY="300">
          <file pinned="false" current-in-tab="false">
            <entry file="file://$PROJECT_DIR$/src/discourje/experiments/refs.clj">
              <provider selected="true" editor-type-id="text-editor">
                <state relative-caret-position="195">
                  <caret line="13" column="22" selection-start-line="13" selection-start-column="11" selection-end-line="13" selection-end-column="22" />
                </state>
              </provider>
            </entry>
          </file>
          <file pinned="false" current-in-tab="false">
            <entry file="file://$PROJECT_DIR$/src/discourje/twoBuyerProtocol/pipes/util.clj">
              <provider selected="true" editor-type-id="text-editor">
                <state>
                  <caret selection-end-line="1" selection-end-column="56" />
                </state>
              </provider>
            </entry>
          </file>
          <file pinned="false" current-in-tab="false">
            <entry file="file://$PROJECT_DIR$/src/discourje/experiments/abstractionExperiments.clj">
              <provider selected="true" editor-type-id="text-editor">
                <state relative-caret-position="330">
                  <caret line="22" column="50" lean-forward="true" selection-start-line="22" selection-start-column="50" selection-end-line="22" selection-end-column="50" />
                </state>
              </provider>
            </entry>
          </file>
          <file pinned="false" current-in-tab="true">
            <entry file="file://$PROJECT_DIR$/src/discourje/twoBuyerProtocol/pipes/simpleSetup.clj">
              <provider selected="true" editor-type-id="text-editor">
                <state relative-caret-position="240">
                  <caret line="22" lean-forward="true" selection-start-line="22" selection-end-line="22" />
                </state>
              </provider>
            </entry>
          </file>
          <file pinned="false" current-in-tab="false">
            <entry file="file://$PROJECT_DIR$/test/discourje/abstractionExperiments_test.clj">
              <provider selected="true" editor-type-id="text-editor">
                <state relative-caret-position="60">
                  <caret line="4" column="76" selection-start-line="4" selection-start-column="65" selection-end-line="4" selection-end-column="76" />
                </state>
              </provider>
            </entry>
          </file>
        </leaf>
      </split-first>
      <split-second>
        <leaf SIDE_TABS_SIZE_LIMIT_KEY="300">
          <file pinned="false" current-in-tab="false">
            <entry file="file://$PROJECT_DIR$/src/discourje/twoBuyerProtocol/pipes/proto.clj">
              <provider selected="true" editor-type-id="text-editor">
                <state relative-caret-position="315">
                  <caret line="21" column="23" selection-start-line="20" selection-start-column="2" selection-end-line="21" selection-end-column="23" />
                </state>
              </provider>
            </entry>
          </file>
          <file pinned="false" current-in-tab="true">
            <entry file="file://$PROJECT_DIR$/src/discourje/twoBuyerProtocol/pipes/ScribbleReplicate.clj">
              <provider selected="true" editor-type-id="text-editor">
                <state relative-caret-position="224">
                  <caret line="28" column="33" lean-forward="true" selection-start-line="28" selection-start-column="33" selection-end-line="28" selection-end-column="33" />
                </state>
              </provider>
            </entry>
          </file>
          <file pinned="false" current-in-tab="false">
            <entry file="file://$PROJECT_DIR$/src/discourje/twoBuyerProtocol/publishSubscribeExample/twoBuyerProtocolPubSub.clj">
              <provider selected="true" editor-type-id="text-editor">
                <state relative-caret-position="180">
                  <caret line="12" column="62" selection-start-line="12" selection-start-column="62" selection-end-line="12" selection-end-column="62" />
                </state>
              </provider>
            </entry>
          </file>
          <file pinned="false" current-in-tab="false">
            <entry file="file://$PROJECT_DIR$/test/async/examples/asyncExamples.clj">
              <provider selected="true" editor-type-id="text-editor">
                <state relative-caret-position="345">
                  <caret line="23" selection-start-line="23" selection-end-line="23" />
                </state>
              </provider>
            </entry>
          </file>
          <file pinned="false" current-in-tab="false">
            <entry file="file://$PROJECT_DIR$/test/async/examples/asyncExperiments.clj">
              <provider selected="true" editor-type-id="text-editor">
                <state relative-caret-position="8595">
                  <caret line="573" selection-start-line="573" selection-end-line="573" />
                </state>
              </provider>
            </entry>
          </file>
          <file pinned="false" current-in-tab="false">
            <entry file="file://$PROJECT_DIR$/src/discourje/twoBuyerProtocol/pipes/participants/seller.clj">
              <provider selected="true" editor-type-id="text-editor">
                <state relative-caret-position="90">
                  <caret line="6" column="17" selection-start-line="6" selection-start-column="17" selection-end-line="6" selection-end-column="17" />
                </state>
              </provider>
            </entry>
          </file>
          <file pinned="false" current-in-tab="false">
            <entry file="file://$PROJECT_DIR$/src/discourje/twoBuyerProtocol/pipes/participants/buyer1.clj">
              <provider selected="true" editor-type-id="text-editor">
                <state relative-caret-position="150">
                  <caret line="10" selection-start-line="10" selection-end-line="10" />
                </state>
              </provider>
            </entry>
          </file>
          <file pinned="false" current-in-tab="false">
            <entry file="file://$PROJECT_DIR$/src/discourje/twoBuyerProtocol/pipes/participants/buyer2.clj">
              <provider selected="true" editor-type-id="text-editor">
                <state relative-caret-position="150">
                  <caret line="10" column="18" selection-start-line="10" selection-start-column="18" selection-end-line="10" selection-end-column="18" />
                </state>
              </provider>
            </entry>
          </file>
        </leaf>
      </split-second>
    </splitter>
  </component>
  <component name="FileTemplateManagerImpl">
    <option name="RECENT_TEMPLATES">
      <list>
        <option value="JavaFXApplication" />
        <option value="Clojure Test Namespace" />
        <option value="Clojure Namespace" />
      </list>
    </option>
  </component>
  <component name="FindInProjectRecents">
    <findStrings>
      <find>verze</find>
      <find>pub</find>
      <find>pipe</find>
    </findStrings>
  </component>
  <component name="Git.Settings">
    <option name="RECENT_GIT_ROOT_PATH" value="$PROJECT_DIR$" />
  </component>
  <component name="IdeDocumentHistory">
    <option name="CHANGED_PATHS">
      <list>
        <option value="$PROJECT_DIR$/test/projectSetup/ProjectSetupTests.clj" />
        <option value="$PROJECT_DIR$/project.clj" />
        <option value="$PROJECT_DIR$/src/projectSetup/ProjectSetup.clj" />
        <option value="$PROJECT_DIR$/src/projectSetup/testCheck.clj" />
        <option value="$PROJECT_DIR$/test/projectSetup/testCheckConfig.clj" />
        <option value="$PROJECT_DIR$/src/ProjectSetup/testCheck.clj" />
        <option value="$PROJECT_DIR$/src/ProjectSetup/ProjectSetup.clj" />
        <option value="$PROJECT_DIR$/src/discourje/experiments.clj" />
        <option value="$PROJECT_DIR$/test/discourje/tbpTests/TBPTests.clj" />
        <option value="$PROJECT_DIR$/src/discourje/experiments/experiments.clj" />
        <option value="$PROJECT_DIR$/test/discourje/experimentsTests.clj" />
        <option value="$PROJECT_DIR$/src/discourje/experiments/abstractionExperiments.clj" />
        <option value="$PROJECT_DIR$/test/discourje/core_test.clj" />
        <option value="$PROJECT_DIR$/src/discourje/threeBuyerProtocol/ThreeBuyerProtocol.clj" />
        <option value="$PROJECT_DIR$/src/discourje/core.clj" />
        <option value="$PROJECT_DIR$/test/discourje/abstractionExperiments_test.clj" />
        <option value="$PROJECT_DIR$/src/discourje/experiments/refs.clj" />
        <option value="$PROJECT_DIR$/src/discourje/TwoBuyerProtocol.clj" />
        <option value="$PROJECT_DIR$/test/async/examples/asyncExperiments.clj" />
        <option value="$PROJECT_DIR$/src/discourje/twoBuyerProtocol/TwoBuyerProtocol.clj" />
        <option value="$PROJECT_DIR$/src/discourje/twoBuyerProtocol/utilities.clj" />
        <option value="$PROJECT_DIR$/src/discourje/twoBuyerProtocol/twoBuyerProtocolPubSub.clj" />
        <option value="$PROJECT_DIR$/src/discourje/twoBuyerProtocol/publishSubscribeExample/utilities.clj" />
        <option value="$PROJECT_DIR$/src/discourje/twoBuyerProtocol/publishSubscribeExample/twoBuyerProtocolPubSub.clj" />
        <option value="$PROJECT_DIR$/test/discourje/tbpTests/pipesTests/protoTests.clj" />
        <option value="$PROJECT_DIR$/test/discourje/tbpTests/pipesTests/participantTests.clj" />
        <option value="$PROJECT_DIR$/test/discourje/tbpTests/pipesTests/buyer2Tests].clj" />
        <option value="$PROJECT_DIR$/test/discourje/tbpTests/pipesTests/sellerTests.clj" />
        <option value="$PROJECT_DIR$/test/discourje/tbpTests/pipesTests/buyer2Tests.clj" />
        <option value="$PROJECT_DIR$/test/discourje/tbpTests/pipesTests/utilTests.clj" />
        <option value="$PROJECT_DIR$/test/discourje/tbpTests/pipesTests/buyer1Tests.clj" />
        <option value="$PROJECT_DIR$/src/discourje/twoBuyerProtocol/pipes/participants/buyer2.clj" />
        <option value="$PROJECT_DIR$/src/discourje/twoBuyerProtocol/pipes/participants/buyer1.clj" />
        <option value="$PROJECT_DIR$/src/discourje/twoBuyerProtocol/pipes/participant.clj" />
        <option value="$PROJECT_DIR$/src/discourje/twoBuyerProtocol/pipes/participants/seller.clj" />
        <option value="$PROJECT_DIR$/src/discourje/twoBuyerProtocol/pipes/util.clj" />
        <option value="$PROJECT_DIR$/src/discourje/twoBuyerProtocol/pipes/proto.clj" />
        <option value="$PROJECT_DIR$/src/discourje/twoBuyerProtocol/pipes/simpleSetup.clj" />
        <option value="$PROJECT_DIR$/src/discourje/twoBuyerProtocol/pipes/ScribbleReplicate.clj" />
      </list>
    </option>
  </component>
  <component name="JsBuildToolGruntFileManager" detection-done="true" sorting="DEFINITION_ORDER" />
  <component name="JsBuildToolPackageJson" detection-done="true" sorting="DEFINITION_ORDER" />
  <component name="JsGulpfileManager">
    <detection-done>true</detection-done>
    <sorting>DEFINITION_ORDER</sorting>
  </component>
  <component name="ProjectFrameBounds" extendedState="6">
    <option name="x" value="1950" />
    <option name="y" value="284" />
    <option name="width" value="1289" />
    <option name="height" value="555" />
  </component>
  <component name="ProjectView">
    <navigator proportions="" version="1">
      <foldersAlwaysOnTop value="true" />
    </navigator>
    <panes>
      <pane id="PackagesPane" />
      <pane id="ProjectPane">
        <subPane>
          <expand>
            <path>
              <item name="discourje" type="b2602c69:ProjectViewProjectNode" />
              <item name="Discourje" type="462c0819:PsiDirectoryNode" />
            </path>
            <path>
              <item name="discourje" type="b2602c69:ProjectViewProjectNode" />
              <item name="Discourje" type="462c0819:PsiDirectoryNode" />
              <item name="doc" type="462c0819:PsiDirectoryNode" />
            </path>
            <path>
              <item name="discourje" type="b2602c69:ProjectViewProjectNode" />
              <item name="Discourje" type="462c0819:PsiDirectoryNode" />
              <item name="resources" type="462c0819:PsiDirectoryNode" />
            </path>
            <path>
              <item name="discourje" type="b2602c69:ProjectViewProjectNode" />
              <item name="Discourje" type="462c0819:PsiDirectoryNode" />
              <item name="src" type="462c0819:PsiDirectoryNode" />
            </path>
            <path>
              <item name="discourje" type="b2602c69:ProjectViewProjectNode" />
              <item name="Discourje" type="462c0819:PsiDirectoryNode" />
              <item name="src" type="462c0819:PsiDirectoryNode" />
              <item name="discourje" type="462c0819:PsiDirectoryNode" />
            </path>
            <path>
              <item name="discourje" type="b2602c69:ProjectViewProjectNode" />
              <item name="Discourje" type="462c0819:PsiDirectoryNode" />
              <item name="src" type="462c0819:PsiDirectoryNode" />
              <item name="discourje" type="462c0819:PsiDirectoryNode" />
              <item name="experiments" type="462c0819:PsiDirectoryNode" />
            </path>
            <path>
              <item name="discourje" type="b2602c69:ProjectViewProjectNode" />
              <item name="Discourje" type="462c0819:PsiDirectoryNode" />
              <item name="src" type="462c0819:PsiDirectoryNode" />
              <item name="discourje" type="462c0819:PsiDirectoryNode" />
              <item name="twoBuyerProtocol" type="462c0819:PsiDirectoryNode" />
            </path>
            <path>
              <item name="discourje" type="b2602c69:ProjectViewProjectNode" />
              <item name="Discourje" type="462c0819:PsiDirectoryNode" />
              <item name="src" type="462c0819:PsiDirectoryNode" />
              <item name="discourje" type="462c0819:PsiDirectoryNode" />
              <item name="twoBuyerProtocol" type="462c0819:PsiDirectoryNode" />
              <item name="pipes" type="462c0819:PsiDirectoryNode" />
            </path>
            <path>
              <item name="discourje" type="b2602c69:ProjectViewProjectNode" />
              <item name="Discourje" type="462c0819:PsiDirectoryNode" />
              <item name="src" type="462c0819:PsiDirectoryNode" />
              <item name="discourje" type="462c0819:PsiDirectoryNode" />
              <item name="twoBuyerProtocol" type="462c0819:PsiDirectoryNode" />
              <item name="publishSubscribeExample" type="462c0819:PsiDirectoryNode" />
            </path>
            <path>
              <item name="discourje" type="b2602c69:ProjectViewProjectNode" />
              <item name="Discourje" type="462c0819:PsiDirectoryNode" />
              <item name="src" type="462c0819:PsiDirectoryNode" />
              <item name="ProjectSetup" type="462c0819:PsiDirectoryNode" />
            </path>
            <path>
              <item name="discourje" type="b2602c69:ProjectViewProjectNode" />
              <item name="Discourje" type="462c0819:PsiDirectoryNode" />
              <item name="test" type="462c0819:PsiDirectoryNode" />
            </path>
            <path>
              <item name="discourje" type="b2602c69:ProjectViewProjectNode" />
              <item name="Discourje" type="462c0819:PsiDirectoryNode" />
              <item name="test" type="462c0819:PsiDirectoryNode" />
              <item name="examples" type="462c0819:PsiDirectoryNode" />
            </path>
            <path>
              <item name="discourje" type="b2602c69:ProjectViewProjectNode" />
              <item name="Discourje" type="462c0819:PsiDirectoryNode" />
              <item name="test" type="462c0819:PsiDirectoryNode" />
              <item name="discourje" type="462c0819:PsiDirectoryNode" />
            </path>
            <path>
              <item name="discourje" type="b2602c69:ProjectViewProjectNode" />
              <item name="Discourje" type="462c0819:PsiDirectoryNode" />
              <item name="test" type="462c0819:PsiDirectoryNode" />
              <item name="discourje" type="462c0819:PsiDirectoryNode" />
              <item name="tbpTests" type="462c0819:PsiDirectoryNode" />
            </path>
            <path>
              <item name="discourje" type="b2602c69:ProjectViewProjectNode" />
              <item name="Discourje" type="462c0819:PsiDirectoryNode" />
              <item name="test" type="462c0819:PsiDirectoryNode" />
              <item name="discourje" type="462c0819:PsiDirectoryNode" />
              <item name="tbpTests" type="462c0819:PsiDirectoryNode" />
              <item name="pipesTests" type="462c0819:PsiDirectoryNode" />
            </path>
            <path>
              <item name="discourje" type="b2602c69:ProjectViewProjectNode" />
              <item name="Discourje" type="462c0819:PsiDirectoryNode" />
              <item name="test" type="462c0819:PsiDirectoryNode" />
              <item name="projectSetup" type="462c0819:PsiDirectoryNode" />
            </path>
            <path>
              <item name="discourje" type="b2602c69:ProjectViewProjectNode" />
              <item name="External Libraries" type="cb654da1:ExternalLibrariesNode" />
            </path>
            <path>
              <item name="discourje" type="b2602c69:ProjectViewProjectNode" />
              <item name="External Libraries" type="cb654da1:ExternalLibrariesNode" />
              <item name="Leiningen: org.clojure/core.async:0.4.474" type="70bed36:NamedLibraryElementNode" />
            </path>
            <path>
              <item name="discourje" type="b2602c69:ProjectViewProjectNode" />
              <item name="External Libraries" type="cb654da1:ExternalLibrariesNode" />
              <item name="Leiningen: org.clojure/core.async:0.4.474" type="70bed36:NamedLibraryElementNode" />
              <item name="core.async-0.4.474.jar" type="462c0819:PsiDirectoryNode" />
            </path>
            <path>
              <item name="discourje" type="b2602c69:ProjectViewProjectNode" />
              <item name="External Libraries" type="cb654da1:ExternalLibrariesNode" />
              <item name="Leiningen: org.clojure/core.async:0.4.474" type="70bed36:NamedLibraryElementNode" />
              <item name="core.async-0.4.474.jar" type="462c0819:PsiDirectoryNode" />
              <item name="core" type="462c0819:PsiDirectoryNode" />
            </path>
            <path>
              <item name="discourje" type="b2602c69:ProjectViewProjectNode" />
              <item name="External Libraries" type="cb654da1:ExternalLibrariesNode" />
              <item name="Leiningen: org.clojure/core.async:0.4.474" type="70bed36:NamedLibraryElementNode" />
              <item name="core.async-0.4.474.jar" type="462c0819:PsiDirectoryNode" />
              <item name="core" type="462c0819:PsiDirectoryNode" />
              <item name="async" type="462c0819:PsiDirectoryNode" />
            </path>
            <path>
              <item name="discourje" type="b2602c69:ProjectViewProjectNode" />
              <item name="External Libraries" type="cb654da1:ExternalLibrariesNode" />
              <item name="Leiningen: org.clojure/core.async:0.4.474" type="70bed36:NamedLibraryElementNode" />
              <item name="core.async-0.4.474.jar" type="462c0819:PsiDirectoryNode" />
              <item name="core" type="462c0819:PsiDirectoryNode" />
              <item name="async" type="462c0819:PsiDirectoryNode" />
              <item name="impl" type="462c0819:PsiDirectoryNode" />
            </path>
          </expand>
          <select />
        </subPane>
      </pane>
      <pane id="Scope" />
    </panes>
  </component>
  <component name="PropertiesComponent">
    <property name="WebServerToolWindowFactoryState" value="false" />
    <property name="aspect.path.notification.shown" value="true" />
    <property name="com.android.tools.idea.instantapp.provision.ProvisionBeforeRunTaskProvider.myTimeStamp" value="1539753293562" />
    <property name="cursive.last.file.extension./home/plcbo/Projects/Discourje/src" value="clj" />
    <property name="cursive.last.file.extension.C\:/Users/Ruben/Documents/Discourje/src" value="clj" />
    <property name="cursive.last.file.extension.C\:/Users/Ruben/Documents/Discourje/test" value="clj" />
    <property name="last_opened_file_path" value="$PROJECT_DIR$" />
    <property name="project.structure.last.edited" value="Global Libraries" />
    <property name="project.structure.proportion" value="0.0" />
    <property name="project.structure.side.proportion" value="0.2" />
    <property name="run.code.analysis.last.selected.profile" value="pProject Default" />
    <property name="settings.editor.selected.configurable" value="reference.settings.project.maven.repository.indices" />
  </component>
  <component name="RecentsManager">
    <key name="MoveClassesOrPackagesDialog.RECENTS_KEY">
      <recent name="discourje" />
    </key>
    <key name="MoveFile.RECENT_KEYS">
      <recent name="C:\Users\Ruben\Documents\Discourje\src\discourje\twoBuyerProtocol\publishSubscribeExample" />
      <recent name="C:\Users\Ruben\Documents\Discourje\src\discourje\twoBuyerProtocol" />
      <recent name="C:\Users\Ruben\Documents\Discourje\src\discourje\experiments" />
    </key>
  </component>
  <component name="ReplState" timestamp="1539753296861">{:repl-history {:ide [], :local [{:command &quot;(defn scribbleChoice [choice acceptPipe declinePipe]\n  (if (choice) acceptPipe declinePipe))&quot;, :offset 92, :ns &quot;discourje.twoBuyerProtocol.pipes.simpleSetup&quot;} {:command &quot;(def generateQuoteDiv\n  (println \&quot;generating random quote div\&quot;)\n  (fn [quote] (+ (rand-int quote) 1)))&quot;, :offset 102, :ns &quot;discourje.twoBuyerProtocol.pipes.simpleSetup&quot;} {:command &quot;(def generateQuoteDiv\n    ((println \&quot;generating random quote div\&quot;)\n      (fn [quote] (+ (rand-int quote) 1))))&quot;, :offset 110, :ns &quot;discourje.twoBuyerProtocol.pipes.simpleSetup&quot;} {:command &quot;(defn CreateTwoBuyerProtocol []\n  (let [buyer1 (chan)\n        buyer2 (chan)\n        seller (chan)]\n    (scribbleSequence (generateBook) string? buyer1 seller)\n    (scribbleMultipleTo (generateQuote) number? seller buyer1 buyer2)\n    (scribbleSequence generateQuoteDiv number? buyer1 buyer2)\n    ;(scribbleChoice quoteDivHigherThan15\n    ;                (\n    ;                  (scribbleSequence (fn [] (\&quot;ok\&quot;)) string? buyer2 seller)\n    ;                  (scribbleSequence (fn [] (\&quot;Address:  test test\&quot;)) string? buyer2 seller)\n    ;                  (scribbleSequence (fn [] (\&quot;Date:  01-01-2018\&quot;)) string? seller buyer2))\n    ;                (scribbleSequence (fn [] (\&quot;quit\&quot;)) string? buyer2 seller))\n    ))&quot;, :offset 712, :ns &quot;discourje.twoBuyerProtocol.pipes.simpleSetup&quot;} {:command &quot;(def generateQuoteDiv\n    (fn [quote] (+ (rand-int quote) 1)))&quot;, :offset 62, :ns &quot;discourje.twoBuyerProtocol.pipes.simpleSetup&quot;} {:command &quot;(defn CreateTwoBuyerProtocol []\n  (let [buyer1 (chan)\n        buyer2 (chan)\n        seller (chan)]\n    (scribbleSequence (generateBook) string? buyer1 seller)\n    (scribbleMultipleTo (generateQuote) number? seller buyer1 buyer2)\n    (scribbleSequence generateQuoteDiv number? buyer1 buyer2)\n    (scribbleChoice quoteDivHigherThan15\n                    (\n                      (scribbleSequence (fn [] (\&quot;ok\&quot;)) string? buyer2 seller)\n                      (scribbleSequence (fn [] (\&quot;Address:  test test\&quot;)) string? buyer2 seller)\n                      (scribbleSequence (fn [] (\&quot;Date:  01-01-2018\&quot;)) string? seller buyer2))\n                    (scribbleSequence (fn [] (\&quot;quit\&quot;)) string? buyer2 seller))\n    ))&quot;, :offset 706, :ns &quot;discourje.twoBuyerProtocol.pipes.simpleSetup&quot;} {:command &quot;(def generateQuoteDiv\n    (fn [quote]\n      (println (format \&quot;Generated quote div %s\&quot; quote))\n      (+ (rand-int quote) 1)))&quot;, :offset 124, :ns &quot;discourje.twoBuyerProtocol.pipes.simpleSetup&quot;} {:command &quot;(def generateQuoteDiv\n    (fn [quote]\n      (println (\&quot;Generating quoteDiv\&quot;))\n      (+ (rand-int quote) 1)))&quot;, :offset 108, :ns &quot;discourje.twoBuyerProtocol.pipes.simpleSetup&quot;} {:command &quot;(discourje.twoBuyerProtocol.pipes.simpleSetup/CreateTwoBuyerProtocol)\\&quot;, :offset 70, :ns &quot;user&quot;} {:command &quot;(discourje.twoBuyerProtocol.pipes.simpleSetup/generateQuoteDiv)&quot;, :offset 63, :ns &quot;user&quot;} {:command &quot;(generateQuoteDiv)&quot;, :offset 18, :ns &quot;user&quot;} {:command &quot;generateQuoteDiv&quot;, :offset 16, :ns &quot;user&quot;} {:command &quot;generateQuoteDiv 2&quot;, :offset 18, :ns &quot;user&quot;} {:command &quot;(def generateQuoteDiv\n  (fn [quote]\n    ; (println (\&quot;Generating quoteDiv\&quot;))\n    (+ (rand-int quote) 1)))&quot;, :offset 104, :ns &quot;user&quot;} {:command &quot;(def generateQuoteDiv\n  (fn [quote]\n    (println (\&quot;Generating quoteDiv\&quot;))\n    (+ (rand-int quote) 1)))&quot;, :offset 102, :ns &quot;user&quot;} {:command &quot;(def generateQuoteDiv\n    (fn [quote]\n      (+ (rand-int quote) 1)(println (\&quot;Generating quoteDiv\&quot;))))&quot;, :offset 101, :ns &quot;discourje.twoBuyerProtocol.pipes.simpleSetup&quot;} {:command &quot;(def generateQuoteDiv\n  (fn [quote]\n    (+ (rand-int quote) 1)(println (\&quot;Generating quoteDiv\&quot;))))&quot;, :offset 97, :ns &quot;user&quot;} {:command &quot;(generateQuoteDiv 2)&quot;, :offset 20, :ns &quot;user&quot;} {:command &quot;(defn scribbleChoice [choice acceptPipe declinePipe]\n  (println \&quot;chosing between accept or decline\&quot;)\n  (if (choice) acceptPipe declinePipe))&quot;, :offset 140, :ns &quot;discourje.twoBuyerProtocol.pipes.simpleSetup&quot;} {:command &quot;(def quoteDivHigherThan15 (fn [x] (&lt; 15 x)))&quot;, :offset 44, :ns &quot;discourje.twoBuyerProtocol.pipes.simpleSetup&quot;} {:command &quot;(defn CreateTwoBuyerProtocol []\n  (let [buyer1 (chan)\n        buyer2 (chan)\n        seller (chan)]\n    (scribbleSequence (generateBook) string? buyer1 seller)\n    (scribbleMultipleTo (generateQuote) number? seller buyer1 buyer2)\n    (scribbleSequence generateQuoteDiv number? buyer1 buyer2)\n    (scribbleChoice quoteDivHigherThan15\n                    ((scribbleSequence (fn [] (\&quot;ok\&quot;)) string? buyer2 seller)\n                     (scribbleSequence (fn [] (\&quot;Address:  test test\&quot;)) string? buyer2 seller)\n                     (scribbleSequence (fn [] (\&quot;Date:  01-01-2018\&quot;)) string? seller buyer2))\n                    (scribbleSequence (fn [] (\&quot;quit\&quot;)) string? buyer2 seller))\n    ))&quot;, :offset 681, :ns &quot;discourje.twoBuyerProtocol.pipes.simpleSetup&quot;} {:command &quot;(discourje.twoBuyerProtocol.pipes.simpletup/CreateTwoBuyerProtocol)&quot;, :offset 67, :ns &quot;user&quot;} {:command &quot;(defn quoteDivHigherThan15 [channel]\n  (let [quote (&lt;! channel)]\n    (println quote)\n    (&gt; 15 quote)))&quot;, :offset 103, :ns &quot;discourje.twoBuyerProtocol.pipes.simpleSetup&quot;} {:command &quot;clear&quot;, :offset 5, :ns &quot;user&quot;} {:command &quot;(defn scribbleMultipleTo\n  \&quot;function to replicate scribble syntax, however we need a filter for now to only take interesting messages from the channels\&quot;\n  [operation filter from to &amp; more]\n  (pipeline 1 to (filter filter) from)\n  (for [m more]\n    ((pipeline 1 m (filter filter) from)))\n  (go (&gt;! from operation)))&quot;, :offset 314, :ns &quot;discourje.twoBuyerProtocol.pipes.simpleSetup&quot;} {:command &quot;(defn CreateTwoBuyerProtocol []\n  (let [buyer1 (chan)\n        buyer2 (chan)\n        seller (chan)]\n    (scribbleSequence (generateBook) string? buyer1 seller)\n    (scribbleMultipleTo (generateQuote) number? seller buyer1 buyer2)\n    (scribbleSequence generateQuoteDiv number? buyer1 buyer2)\n    (if (quoteDivHigherThan15 buyer2)\n      ((scribbleSequence (fn [] (\&quot;ok\&quot;)) string? buyer2 seller)\n        (scribbleSequence (fn [] (\&quot;Address:  test test\&quot;)) string? buyer2 seller)\n        (scribbleSequence (fn [] (\&quot;Date:  01-01-2018\&quot;)) string? seller buyer2))\n      (scribbleSequence (fn [] (\&quot;quit\&quot;)) string? buyer2 seller))\n\n\n\n    ;(scribbleChoice quoteDivHigherThan15\n    ;                ((scribbleSequence (fn [] (\&quot;ok\&quot;)) string? buyer2 seller)\n    ;                 (scribbleSequence (fn [] (\&quot;Address:  test test\&quot;)) string? buyer2 seller)\n    ;                 (scribbleSequence (fn [] (\&quot;Date:  01-01-2018\&quot;)) string? seller buyer2))\n    ;                (scribbleSequence (fn [] (\&quot;quit\&quot;)) string? buyer2 seller))\n    ))&quot;, :offset 1016, :ns &quot;discourje.twoBuyerProtocol.pipes.simpleSetup&quot;} {:command &quot;(def generateQuoteDiv\n    (fn [quote]\n      (+ (rand-int 12) 1)))&quot;, :offset 65, :ns &quot;discourje.twoBuyerProtocol.pipes.simpleSetup&quot;} {:command &quot;(defn scribbleSequence\n  \&quot;function to replicate scribble syntax, however we need a filter for now to only take interesting messages from the channels\&quot;\n  [operation filter from to]\n  (pipeline 1 to (filter filter) from)\n  (fn [] (go (&gt;! from operation))) )&quot;, :offset 255, :ns &quot;discourje.twoBuyerProtocol.pipes.simpleSetup&quot;} {:command &quot;(defn CreateTwoBuyerProtocol []\n  (let [buyer1 (chan)\n        buyer2 (chan)\n        seller (chan)]\n    (scribbleSequence (generateBook) string? buyer1 seller)\n    (scribbleMultipleTo (generateQuote) number? seller buyer1 buyer2)\n    (scribbleSequence generateQuoteDiv number? buyer1 buyer2)\n    (if (quoteDivHigherThan15 buyer2)\n      ((scribbleSequence (fn [x] (\&quot;ok\&quot;)) string? buyer2 seller)\n        (scribbleSequence (fn [x] (\&quot;Address:  test test\&quot;)) string? buyer2 seller)\n        (scribbleSequence (fn [x] (\&quot;Date:  01-01-2018\&quot;)) string? seller buyer2))\n      (scribbleSequence (fn [] (\&quot;quit\&quot;)) string? buyer2 seller))\n\n\n\n    ;(scribbleChoice quoteDivHigherThan15\n    ;                ((scribbleSequence (fn [] (\&quot;ok\&quot;)) string? buyer2 seller)\n    ;                 (scribbleSequence (fn [] (\&quot;Address:  test test\&quot;)) string? buyer2 seller)\n    ;                 (scribbleSequence (fn [] (\&quot;Date:  01-01-2018\&quot;)) string? seller buyer2))\n    ;                (scribbleSequence (fn [] (\&quot;quit\&quot;)) string? buyer2 seller))\n    ))&quot;, :offset 1019, :ns &quot;discourje.twoBuyerProtocol.pipes.simpleSetup&quot;} {:command &quot;(defn CreateTwoBuyerProtocol []\n  (let [buyer1 (chan)\n        buyer2 (chan)\n        seller (chan)]\n    (scribbleSequence (generateBook) string? buyer1 seller)\n    (scribbleMultipleTo (generateQuote) number? seller buyer1 buyer2)\n    (scribbleSequence generateQuoteDiv number? buyer1 buyer2)\n    (if (quoteDivHigherThan15 buyer2)\n      ((scribbleSequence (fn [x] (\&quot;ok\&quot;)) string? buyer2 seller)\n        (scribbleSequence (fn [x] (\&quot;Address:  test test\&quot;)) string? buyer2 seller)\n        (scribbleSequence (fn [x] (\&quot;Date:  01-01-2018\&quot;)) string? seller buyer2))\n      (scribbleSequence (fn [x] (\&quot;quit\&quot;)) string? buyer2 seller))\n\n\n\n    ;(scribbleChoice quoteDivHigherThan15\n    ;                ((scribbleSequence (fn [] (\&quot;ok\&quot;)) string? buyer2 seller)\n    ;                 (scribbleSequence (fn [] (\&quot;Address:  test test\&quot;)) string? buyer2 seller)\n    ;                 (scribbleSequence (fn [] (\&quot;Date:  01-01-2018\&quot;)) string? seller buyer2))\n    ;                (scribbleSequence (fn [] (\&quot;quit\&quot;)) string? buyer2 seller))\n    ))&quot;, :offset 1020, :ns &quot;discourje.twoBuyerProtocol.pipes.simpleSetup&quot;} {:command &quot;(defn CreateTwoBuyerProtocol []\n  (let [buyer1 (chan)\n        buyer2 (chan)\n        seller (chan)]\n    (scribbleSequence (generateBook) string? buyer1 seller)\n    (scribbleMultipleTo (generateQuote) number? seller buyer1 buyer2)\n    (scribbleSequence generateQuoteDiv number? buyer1 buyer2)\n    (if (quoteDivHigherThan15 buyer2)\n      ((scribbleSequence (fn [x] (\&quot;ok\&quot;)) string? buyer2 seller)\n        ;(scribbleSequence (fn [x] (\&quot;Address:  test test\&quot;)) string? buyer2 seller)\n        ;(scribbleSequence (fn [x] (\&quot;Date:  01-01-2018\&quot;)) string? seller buyer2)\n        )\n      (scribbleSequence (fn [x] (\&quot;quit\&quot;)) string? buyer2 seller))\n\n\n\n    ;(scribbleChoice quoteDivHigherThan15\n    ;                ((scribbleSequence (fn [] (\&quot;ok\&quot;)) string? buyer2 seller)\n    ;                 (scribbleSequence (fn [] (\&quot;Address:  test test\&quot;)) string? buyer2 seller)\n    ;                 (scribbleSequence (fn [] (\&quot;Date:  01-01-2018\&quot;)) string? seller buyer2))\n    ;                (scribbleSequence (fn [] (\&quot;quit\&quot;)) string? buyer2 seller))\n    ))&quot;, :offset 1031, :ns &quot;discourje.twoBuyerProtocol.pipes.simpleSetup&quot;} {:command &quot;(defn CreateTwoBuyerProtocol []\n  (let [buyer1 (chan)\n        buyer2 (chan)\n        seller (chan)]\n    (scribbleSequence (generateBook) string? buyer1 seller)\n    (scribbleMultipleTo (generateQuote) number? seller buyer1 buyer2)\n    (scribbleSequence generateQuoteDiv number? buyer1 buyer2)\n    (if (quoteDivHigherThan15 buyer2)\n      ((scribbleSequence (fn [x] (\&quot;ok\&quot;)) string? buyer2 seller)\n        (scribbleSequence (fn [x] (\&quot;Address:  test test\&quot;)) string? buyer2 seller)\n        ;(scribbleSequence (fn [x] (\&quot;Date:  01-01-2018\&quot;)) string? seller buyer2)\n        )\n      (scribbleSequence (fn [x] (\&quot;quit\&quot;)) string? buyer2 seller))\n\n\n\n    ;(scribbleChoice quoteDivHigherThan15\n    ;                ((scribbleSequence (fn [] (\&quot;ok\&quot;)) string? buyer2 seller)\n    ;                 (scribbleSequence (fn [] (\&quot;Address:  test test\&quot;)) string? buyer2 seller)\n    ;                 (scribbleSequence (fn [] (\&quot;Date:  01-01-2018\&quot;)) string? seller buyer2))\n    ;                (scribbleSequence (fn [] (\&quot;quit\&quot;)) string? buyer2 seller))\n    ))&quot;, :offset 1030, :ns &quot;discourje.twoBuyerProtocol.pipes.simpleSetup&quot;} {:command &quot;(defn scribbleMultipleTo\n  \&quot;function to replicate scribble syntax, however we need a filter for now to only take interesting messages from the channels\&quot;\n  [operation filter from to &amp; more]\n  (pipeline 1 to (filter filter) from)\n  (for [m more]\n    ((pipeline 1 m (filter filter) from)))\n  (fn [] (go (&gt;! from operation))) )&quot;, :offset 323, :ns &quot;discourje.twoBuyerProtocol.pipes.simpleSetup&quot;} {:command &quot;(defn scribbleSequence\n  \&quot;function to replicate scribble syntax, however we need a filter for now to only take interesting messages from the channels\&quot;\n  [operation filter from to]\n  (pipeline 1 to (filter filter) from)\n  (fn [](go (&gt;! from operation))))&quot;, :offset 253, :ns &quot;discourje.twoBuyerProtocol.pipes.simpleSetup&quot;} {:command &quot;(defn scribbleMultipleTo\n  \&quot;function to replicate scribble syntax, however we need a filter for now to only take interesting messages from the channels\&quot;\n  [operation filter from to &amp; more]\n  (pipeline 1 to (filter filter) from)\n  (for [m more]\n    ((pipeline 1 m (filter filter) from)))\n  (fn [] (go (&gt;! from operation))))&quot;, :offset 322, :ns &quot;discourje.twoBuyerProtocol.pipes.simpleSetup&quot;} {:command &quot;(defn quoteDivHigherThan15 [channel]\n  (go (let [quote (&lt;! channel)]\n        (println quote)\n        (&gt; 15 quote))))&quot;, :offset 116, :ns &quot;discourje.twoBuyerProtocol.pipes.simpleSetup&quot;} {:command &quot;(defn scribbleMultipleTo\n  \&quot;function to replicate scribble syntax, however we need a filter for now to only take interesting messages from the channels\&quot;\n  [operation filter from to &amp; more]\n  (pipeline 1 to (filter filter) from)\n  (for [m more]\n    (pipeline 1 m (filter filter) from)) \n  (fn [] (go (&gt;! from operation))))&quot;, :offset 321, :ns &quot;discourje.twoBuyerProtocol.pipes.simpleSetup&quot;} {:command &quot;(defn quoteDivHigherThan15 [channel]\n  (go (let [quote (&lt;! channel)]\n        (println (format \&quot;quote is %s\&quot; quote))\n        (println (format \&quot;testing:  %s\&quot; (&lt;! quote)))\n        (&gt; 15 quote))))&quot;, :offset 192, :ns &quot;discourje.twoBuyerProtocol.pipes.simpleSetup&quot;} {:command &quot;(defn quoteDivHigherThan15 [channel]\n  (go (let [quote (&lt;! channel)]\n        (println (format \&quot;quote is %s\&quot; quote))\n        (&gt; 15 quote))))&quot;, :offset 139, :ns &quot;discourje.twoBuyerProtocol.pipes.simpleSetup&quot;} {:command &quot;(defn CreateTwoBuyerProtocol []\n  (let [buyer1 (chan)\n        buyer2 (chan)\n        seller (chan)]\n    (scribbleSequence (generateBook) string? buyer1 seller)\n    (scribbleMultipleTo (generateQuote) number? seller buyer1 buyer2)\n    (scribbleSequence generateQuoteDiv number? buyer1 buyer2)\n    (if (quoteDivHigherThan15 buyer2)\n      ((scribbleSequence (fn [x] (\&quot;ok\&quot;)) string? buyer2 seller)\n        ;(scribbleSequence (fn [x] (\&quot;Address:  test test\&quot;)) string? buyer2 seller)\n        ;(scribbleSequence (fn [x] (\&quot;Date:  01-01-2018\&quot;)) string? seller buyer2)\n        )\n      (scribbleSequence (fn [x] (\&quot;quit\&quot;)) string? buyer2 seller))))&quot;, :offset 634, :ns &quot;discourje.twoBuyerProtocol.pipes.simpleSetup&quot;} {:command &quot;(defn CreateTwoBuyerProtocol []\n  (let [buyer1 (chan)\n        buyer2 (chan)\n        seller (chan)]\n    (scribbleSequence (generateBook) string? buyer1 seller)\n    (scribbleMultipleTo (generateQuote) number? seller buyer1 buyer2)\n    (scribbleSequence generateQuoteDiv number? buyer1 buyer2)\n    (if (quoteDivHigherThan15 (&lt;! buyer2) )\n      ((scribbleSequence (fn [x] (\&quot;ok\&quot;)) string? buyer2 seller)\n        ;(scribbleSequence (fn [x] (\&quot;Address:  test test\&quot;)) string? buyer2 seller)\n        ;(scribbleSequence (fn [x] (\&quot;Date:  01-01-2018\&quot;)) string? seller buyer2)\n        )\n      (scribbleSequence (fn [x] (\&quot;quit\&quot;)) string? buyer2 seller))))&quot;, :offset 640, :ns &quot;discourje.twoBuyerProtocol.pipes.simpleSetup&quot;} {:command &quot;(defn CreateTwoBuyerProtocol []\n  (let [buyer1 (chan)\n        buyer2 (chan)\n        seller (chan)]\n    (scribbleSequence (generateBook) string? buyer1 seller)\n    (scribbleMultipleTo (generateQuote) number? seller buyer1 buyer2)\n    (scribbleSequence generateQuoteDiv number? buyer1 buyer2)\n    (go (if (quoteDivHigherThan15 (&lt;! buyer2) )\n          ((scribbleSequence (fn [x] (\&quot;ok\&quot;)) string? buyer2 seller)\n            ;(scribbleSequence (fn [x] (\&quot;Address:  test test\&quot;)) string? buyer2 seller)\n            ;(scribbleSequence (fn [x] (\&quot;Date:  01-01-2018\&quot;)) string? seller buyer2)\n            )\n          (scribbleSequence (fn [x] (\&quot;quit\&quot;)) string? buyer2 seller)))))&quot;, :offset 665, :ns &quot;discourje.twoBuyerProtocol.pipes.simpleSetup&quot;} {:command &quot;(defn CreateTwoBuyerProtocol []\n  (let [buyer1 (chan)\n        buyer2 (chan)\n        seller (chan)]\n    (scribbleSequence (generateBook) string? buyer1 seller)\n    (scribbleMultipleTo (generateQuote) number? seller buyer1 buyer2)\n    (scribbleSequence generateQuoteDiv number? buyer1 buyer2)\n    (if (quoteDivHigherThan15 buyer2)\n      ((scribbleSequence (fn [x] (str \&quot;ok\&quot;)) string? buyer2 seller)\n        ;(scribbleSequence (fn [x] (\&quot;Address:  test test\&quot;)) string? buyer2 seller)\n        ;(scribbleSequence (fn [x] (\&quot;Date:  01-01-2018\&quot;)) string? seller buyer2)\n        )\n      (scribbleSequence (fn [x] (str \&quot;quit\&quot;)) string? buyer2 seller))))&quot;, :offset 642, :ns &quot;discourje.twoBuyerProtocol.pipes.simpleSetup&quot;} {:command &quot;(defn CreateTwoBuyerProtocol []\n  (let [buyer1 (chan)\n        buyer2 (chan)\n        seller (chan)]\n    (scribbleSequence (generateBook) string? buyer1 seller)\n    (scribbleMultipleTo (generateQuote) number? seller buyer1 buyer2)\n    (scribbleSequence generateQuoteDiv number? buyer1 buyer2)\n    (if (quoteDivHigherThan15 buyer2)\n      ;(\n        (scribbleSequence (fn [x] (str \&quot;ok\&quot;)) string? buyer2 seller)\n        ;(scribbleSequence (fn [x] (\&quot;Address:  test test\&quot;)) string? buyer2 seller)\n        ;(scribbleSequence (fn [x] (\&quot;Date:  01-01-2018\&quot;)) string? seller buyer2)\n        ;)\n      (scribbleSequence (fn [x] (str \&quot;quit\&quot;)) string? buyer2 seller))))&quot;, :offset 653, :ns &quot;discourje.twoBuyerProtocol.pipes.simpleSetup&quot;} {:command &quot;(defn CreateTwoBuyerProtocol []\n  (let [buyer1 (chan)\n        buyer2 (chan)\n        seller (chan)]\n    (scribbleSequence (generateBook) string? buyer1 seller)\n    (scribbleMultipleTo (generateQuote) number? seller buyer1 buyer2)\n    (scribbleSequence generateQuoteDiv number? buyer1 buyer2)\n    (if (quoteDivHigherThan15 buyer2)\n      ;(\n        (scribbleSequence (fn [x] (str \&quot;ok\&quot;)) string? buyer2 seller)\n        (scribbleSequence (fn [x] (\&quot;Address:  test test\&quot;)) string? buyer2 seller)\n        ;(scribbleSequence (fn [x] (\&quot;Date:  01-01-2018\&quot;)) string? seller buyer2)\n        ;)\n      (scribbleSequence (fn [x] (str \&quot;quit\&quot;)) string? buyer2 seller))))&quot;, :offset 652, :ns &quot;discourje.twoBuyerProtocol.pipes.simpleSetup&quot;} {:command &quot;(defn CreateTwoBuyerProtocol []\n  (let [buyer1 (chan)\n        buyer2 (chan)\n        seller (chan)]\n    (scribbleSequence (generateBook) string? buyer1 seller)\n    (scribbleMultipleTo (generateQuote) number? seller buyer1 buyer2)\n    (scribbleSequence generateQuoteDiv number? buyer1 buyer2)\n    (if (quoteDivHigherThan15 buyer2)\n      (go ((scribbleSequence (fn [x] (str \&quot;ok\&quot;)) string? buyer2 seller)\n            (scribbleSequence (fn [x] (\&quot;Address:  test test\&quot;)) string? buyer2 seller))\n        ;(scribbleSequence (fn [x] (\&quot;Date:  01-01-2018\&quot;)) string? seller buyer2)\n        )\n      (scribbleSequence (fn [x] (str \&quot;quit\&quot;)) string? buyer2 seller))))&quot;, :offset 650, :ns &quot;discourje.twoBuyerProtocol.pipes.simpleSetup&quot;} {:command &quot;(defn CreateTwoBuyerProtocol []\n  (let [buyer1 (chan)\n        buyer2 (chan)\n        seller (chan)]\n    (scribbleSequence (generateBook) string? buyer1 seller)\n    (scribbleMultipleTo (generateQuote) number? seller buyer1 buyer2)\n    (scribbleSequence generateQuoteDiv number? buyer1 buyer2)\n    (if (quoteDivHigherThan15 buyer2)\n      (go ((scribbleSequence (fn [x] (str \&quot;ok\&quot;)) string? buyer2 seller)\n            (scribbleSequence (fn [x] (str \&quot;Address:  test test\&quot;)) string? buyer2 seller))\n        ;(scribbleSequence (fn [x] (\&quot;Date:  01-01-2018\&quot;)) string? seller buyer2)\n        )\n      (scribbleSequence (fn [x] (str \&quot;quit\&quot;)) string? buyer2 seller))))&quot;, :offset 654, :ns &quot;discourje.twoBuyerProtocol.pipes.simpleSetup&quot;} {:command &quot;(defn CreateTwoBuyerProtocol []\n  (let [buyer1 (chan)\n        buyer2 (chan)\n        seller (chan)]\n    (scribbleSequence (generateBook) string? buyer1 seller)\n    (scribbleMultipleTo (generateQuote) number? seller buyer1 buyer2)\n    (scribbleSequence generateQuoteDiv number? buyer1 buyer2)\n    (if (quoteDivHigherThan15 buyer2)\n      ;(\n        (scribbleSequence (fn [x] (str \&quot;ok\&quot;)) string? buyer2 seller)\n      ;        (scribbleSequence (fn [x] (str \&quot;Address:  test test\&quot;)) string? buyer2 seller)\n        ;(scribbleSequence (fn [x] (str \&quot;Date:  01-01-2018\&quot;)) string? seller buyer2)\n        ;)\n      (scribbleSequence (fn [x] (str \&quot;quit\&quot;)) string? buyer2 seller))))&quot;, :offset 667, :ns &quot;discourje.twoBuyerProtocol.pipes.simpleSetup&quot;} {:command &quot;(defn CreateTwoBuyerProtocol []\n  (let [buyer1 (chan)\n        buyer2 (chan)\n        seller (chan)]\n    (scribbleSequence (generateBook) string? buyer1 seller)\n    (scribbleMultipleTo (generateQuote) number? seller buyer1 buyer2)\n    (scribbleSequence generateQuoteDiv number? buyer1 buyer2)\n    (if (quoteDivHigherThan15 buyer2)\n      ;(\n        (scribbleSequence (fn [x] (print \&quot;ok\&quot;)) string? buyer2 seller)\n      ;        (scribbleSequence (fn [x] (str \&quot;Address:  test test\&quot;)) string? buyer2 seller)\n        ;(scribbleSequence (fn [x] (str \&quot;Date:  01-01-2018\&quot;)) string? seller buyer2)\n        ;)\n      (scribbleSequence (fn [x] (print \&quot;quit\&quot;)) string? buyer2 seller))))&quot;, :offset 671, :ns &quot;discourje.twoBuyerProtocol.pipes.simpleSetup&quot;} {:command &quot;(+ 1 2)&quot;, :offset 7, :ns &quot;user&quot;} {:command &quot;(defn scribbleSequence\n  \&quot;function to replicate scribble syntax, however we need a filter for now to only take interesting messages from the channels\&quot;\n  [operation filter from to]\n  (pipeline 1 to (filter filter) from)\n  (go (&gt;!! from operation)))&quot;, :offset 247, :ns &quot;discourje.twoBuyerProtocol.pipes.simpleSetup&quot;} {:command &quot;(defn scribbleMultipleTo\n  \&quot;function to replicate scribble syntax, however we need a filter for now to only take interesting messages from the channels\&quot;\n  [operation filter from to &amp; more]\n  (pipeline 1 to (filter filter) from)\n  (for [m more]\n    (pipeline 1 m (filter filter) from))\n  (go (&gt;!! from operation)))&quot;, :offset 313, :ns &quot;discourje.twoBuyerProtocol.pipes.simpleSetup&quot;} {:command &quot;(defn quoteDivHigherThan15 [channel]\n  (go (let [quote (&lt;!! channel)]\n        (println (format \&quot;quote is %s\&quot; quote))\n        (&gt; 15 12))))&quot;, :offset 137, :ns &quot;discourje.twoBuyerProtocol.pipes.simpleSetup&quot;} {:command &quot;(defn scribbleSequence\n  \&quot;function to replicate scribble syntax, however we need a filter for now to only take interesting messages from the channels\&quot;\n  [operation filter from to]\n  (pipeline 1 to (filter filter) from)\n  (go (&gt;! from operation)))&quot;, :offset 246, :ns &quot;discourje.twoBuyerProtocol.pipes.simpleSetup&quot;} {:command &quot;(defn scribbleMultipleTo\n  \&quot;function to replicate scribble syntax, however we need a filter for now to only take interesting messages from the channels\&quot;\n  [operation filter from to &amp; more]\n  (pipeline 1 to (filter filter) from)\n  (for [m more]\n    (pipeline 1 m (filter filter) from))\n  (go (&gt;! from operation)))&quot;, :offset 312, :ns &quot;discourje.twoBuyerProtocol.pipes.simpleSetup&quot;} {:command &quot;refer clojure.core.async :all&quot;, :offset 29, :ns &quot;user&quot;} {:command &quot;'(:require [clojure.core.async :as async :refer :all])&quot;, :offset 54, :ns &quot;user&quot;} {:command &quot;(:require [clojure.core.async :as async :refer :all])&quot;, :offset 53, :ns &quot;user&quot;} {:command &quot;(require clojure.core.async)&quot;, :offset 28, :ns &quot;user&quot;} {:command &quot;(require 'clojure.core.async)&quot;, :offset 29, :ns &quot;user&quot;} {:command &quot;(defn test [channel]\n  (fn [] (go ) (!&lt; channel))\n  (fn [] (go ) (!&lt; channel)))&quot;, :offset 79, :ns &quot;user&quot;} {:command &quot;(defn test [channel]\n  (fn [] (go (!&lt; channel)))\n  (fn [] (go (!&lt; channel))))&quot;, :offset 77, :ns &quot;user&quot;} {:command &quot;(defn test [channel]\n  (fn [] (go (&lt;! channel)))\n  (fn [] (go (&lt;! channel))))&quot;, :offset 77, :ns &quot;discourje.twoBuyerProtocol.pipes.simpleSetup&quot;} {:command &quot;(+12 2)&quot;, :offset 7, :ns &quot;user&quot;} {:command &quot;(defn testCC [channel]\n  (fn [] (go (&lt;! channel)))\n  (fn [] (go (&lt;! channel))))&quot;, :offset 79, :ns &quot;discourje.twoBuyerProtocol.pipes.simpleSetup&quot;} {:command &quot;(testCC)&quot;, :offset 8, :ns &quot;user&quot;} {:command &quot;(discourje.twoBuyerProtocol.pipes.simpleSetup/testCC (chan))&quot;, :offset 60, :ns &quot;user&quot;} {:command &quot;(testCC (chan))&quot;, :offset 15, :ns &quot;discourje.twoBuyerProtocol.pipes.simpleSetup&quot;} {:command &quot;(ns discourje.twoBuyerProtocol.pipes.simpleSetup\n  (:require [clojure.core.async :as async :refer :all]))&quot;, :offset 105, :ns &quot;user&quot;} {:command &quot;(defn scribbleSequence\n  \&quot;function to replicate scribble syntax, however we need a filter for now to only take interesting messages from the channels\&quot;\n  [operation filter from to]\n  (pipeline 1 to (filter filter) from)\n  (fn [] (go (&gt;! from operation))))&quot;, :offset 254, :ns &quot;discourje.twoBuyerProtocol.pipes.simpleSetup&quot;} {:command &quot;(defn scribbleMultipleTo\n  \&quot;function to replicate scribble syntax, however we need a filter for now to only take interesting messages from the channels\&quot;\n  [operation filter from to &amp; more]\n  (pipeline 1 to (filter filter) from)\n  (for [m more]\n    (pipeline 1 m (filter filter) from))\n  (fn [] (go (&gt;! from operation))))&quot;, :offset 320, :ns &quot;discourje.twoBuyerProtocol.pipes.simpleSetup&quot;} {:command &quot;(defn generateBook []\n  (println \&quot;generating book\&quot;)\n  (str \&quot;Joy of Clojure\&quot;))&quot;, :offset 77, :ns &quot;discourje.twoBuyerProtocol.pipes.simpleSetup&quot;} {:command &quot;(defn generateQuote []\n  (println \&quot;generating random integer between 0 and 30\&quot;)\n  (+ (rand-int 30) 1))&quot;, :offset 102, :ns &quot;discourje.twoBuyerProtocol.pipes.simpleSetup&quot;} {:command &quot;(def generateQuoteDiv\n    (fn [quote]\n      (+ (rand-int quote) 1)))&quot;, :offset 68, :ns &quot;discourje.twoBuyerProtocol.pipes.simpleSetup&quot;} {:command &quot;(defn quoteDivHigherThan15 [channel]\n  (go (let [quote (&lt;! channel)]\n        (println (format \&quot;quote is %s\&quot; quote))\n        (&gt; 15 12))))&quot;, :offset 136, :ns &quot;discourje.twoBuyerProtocol.pipes.simpleSetup&quot;} {:command &quot;(defn CreateTwoBuyerProtocol []\n  (let [buyer1 (chan)\n        buyer2 (chan)\n        seller (chan)]\n    (scribbleSequence (generateBook) string? buyer1 seller)\n    (scribbleMultipleTo (generateQuote) number? seller buyer1 buyer2)\n    (scribbleSequence generateQuoteDiv number? buyer1 buyer2)\n    (if (quoteDivHigherThan15 buyer2)\n      ;(\n        (scribbleSequence (fn [x] (println \&quot;ok\&quot;)) string? buyer2 seller)\n      ;        (scribbleSequence (fn [x] (str \&quot;Address:  test test\&quot;)) string? buyer2 seller)\n        ;(scribbleSequence (fn [x] (str \&quot;Date:  01-01-2018\&quot;)) string? seller buyer2)\n        ;)\n      (scribbleSequence (fn [x] (println \&quot;quit\&quot;)) string? buyer2 seller))))&quot;, :offset 675, :ns &quot;discourje.twoBuyerProtocol.pipes.simpleSetup&quot;} {:command &quot;(defn CreateTwoBuyerProtocol []\n  (let [buyer1 (chan)\n        buyer2 (chan)\n        seller (chan)]\n    (scribbleSequence (generateBook) string? buyer1 seller)\n    (scribbleMultipleTo (generateQuote) number? seller buyer1 buyer2)\n    (scribbleSequence generateQuoteDiv number? buyer1 buyer2)\n    (if (quoteDivHigherThan15 buyer2)\n      ((scribbleSequence (fn [x] (println \&quot;ok\&quot;)) string? buyer2 seller)\n       (scribbleSequence (fn [x] (str \&quot;Address:  test test\&quot;)) string? buyer2 seller)\n        ;(scribbleSequence (fn [x] (str \&quot;Date:  01-01-2018\&quot;)) string? seller buyer2)\n        )\n      (scribbleSequence (fn [x] (println \&quot;quit\&quot;)) string? buyer2 seller))))&quot;, :offset 656, :ns &quot;discourje.twoBuyerProtocol.pipes.simpleSetup&quot;} {:command &quot;(defn CreateTwoBuyerProtocol []\n  (let [buyer1 (chan)\n        buyer2 (chan)\n        seller (chan)]\n    (scribbleSequence (generateBook) string? buyer1 seller)\n    (scribbleMultipleTo (generateQuote) number? seller buyer1 buyer2)\n    (scribbleSequence generateQuoteDiv number? buyer1 buyer2)\n    (if (quoteDivHigherThan15 buyer2)\n      ((scribbleSequence (fn [x] (str \&quot;ok\&quot;)) string? buyer2 seller)\n       (scribbleSequence (fn [x] (str \&quot;Address:  test test\&quot;)) string? buyer2 seller)\n        ;(scribbleSequence (fn [x] (str \&quot;Date:  01-01-2018\&quot;)) string? seller buyer2)\n        )\n      (scribbleSequence (fn [x] (str \&quot;quit\&quot;)) string? buyer2 seller))))&quot;, :offset 648, :ns &quot;discourje.twoBuyerProtocol.pipes.simpleSetup&quot;} {:command &quot;(defn CreateTwoBuyerProtocol []\n  (let [buyer1 (chan)\n        buyer2 (chan)\n        seller (chan)]\n    (scribbleSequence (generateBook) string? buyer1 seller)\n    (scribbleMultipleTo (generateQuote) number? seller buyer1 buyer2)\n    (scribbleSequence generateQuoteDiv number? buyer1 buyer2)\n    (if (quoteDivHigherThan15 buyer2)\n      ((scribbleSequence (fn [x] (str \&quot;ok\&quot;)) string? buyer2 seller)\n        (scribbleSequence (fn [x] (str \&quot;Address: test test\&quot;)) string? buyer2 seller)\n        (scribbleSequence (fn [x] (str \&quot;Date:  01-01-2018\&quot;)) string? seller buyer2))\n      (scribbleSequence (fn [x] (str \&quot;quit\&quot;)) string? buyer2 seller))))&quot;, :offset 638, :ns &quot;discourje.twoBuyerProtocol.pipes.simpleSetup&quot;} {:command &quot;(defn CreateTwoBuyerProtocol []\n  (let [buyer1 (chan)\n        buyer2 (chan)\n        seller (chan)]\n    (scribbleSequence (generateBook) string? buyer1 seller)\n    (scribbleMultipleTo (generateQuote) number? seller buyer1 buyer2)\n    (scribbleSequence generateQuoteDiv number? buyer1 buyer2)\n    (if (quoteDivHigherThan15 buyer2)\n      ;(\n        (scribbleSequence (fn [x] (str \&quot;ok\&quot;)) string? buyer2 seller)\n        ;(scribbleSequence (fn [x] (str \&quot;Address: test test\&quot;)) string? buyer2 seller)\n        ;(scribbleSequence (fn [x] (str \&quot;Date:  01-01-2018\&quot;)) string? seller buyer2)\n        ; )\n      (scribbleSequence (fn [x] (str \&quot;quit\&quot;)) string? buyer2 seller))))&quot;, :offset 661, :ns &quot;discourje.twoBuyerProtocol.pipes.simpleSetup&quot;} {:command &quot;(discourje.twoBuyerProtocol.pipes.simpleSetup/CreateTwoBuyerProtocol)&quot;, :offset 69, :ns &quot;discourje.twoBuyerProtocol.pipes.simpleSetup&quot;} {:command &quot;(ns discourje.twoBuyerProtocol.pipes.ScribbleReplicate\n  (:require [clojure.core.async :as async :refer :all]\n            [clojure.core :refer :all]))&quot;, :offset 150, :ns &quot;user&quot;} {:command &quot;(defrecord pipeAndOp [pipe operation])&quot;, :offset 38, :ns &quot;discourje.twoBuyerProtocol.pipes.ScribbleReplicate&quot;} {:command &quot;(def a (chan))&quot;, :offset 14, :ns &quot;discourje.twoBuyerProtocol.pipes.ScribbleReplicate&quot;} {:command &quot;(def b (chan))&quot;, :offset 14, :ns &quot;discourje.twoBuyerProtocol.pipes.ScribbleReplicate&quot;} {:command &quot;(def c (chan))&quot;, :offset 14, :ns &quot;discourje.twoBuyerProtocol.pipes.ScribbleReplicate&quot;} {:command &quot;(defn getPipe [to from]\n  (-&gt;pipeAndOp (pipeline 1 to (filter string?) from) (go (println (&lt;! to)))))&quot;, :offset 101, :ns &quot;discourje.twoBuyerProtocol.pipes.ScribbleReplicate&quot;} {:command &quot;(defn getPipe [to from]\n  (-&gt;pipeAndOp (pipeline 1 to (filter string?) from) (go-loop [] (println (!&gt; to))\n                                                                 (recur))))&quot;, :offset 182, :ns &quot;discourje.twoBuyerProtocol.pipes.ScribbleReplicate&quot;} {:command &quot;(defn getPipe [to from]\n  (-&gt;pipeAndOp (pipeline 1 to (filter string?) from) (go-loop [] (println (&gt;! to))\n                                                                 (recur))))&quot;, :offset 182, :ns &quot;discourje.twoBuyerProtocol.pipes.ScribbleReplicate&quot;} {:command &quot;(go (&lt;! a \&quot;haha\&quot;))&quot;, :offset 18, :ns &quot;discourje.twoBuyerProtocol.pipes.ScribbleReplicate&quot;} {:command &quot;(defn getPipe [to from]\n  (-&gt;pipeAndOp (pipeline 1 to (filter string?) from)\n               (go-loop []\n                 (println (&lt;! to))\n                 (recur))))&quot;, :offset 166, :ns &quot;discourje.twoBuyerProtocol.pipes.ScribbleReplicate&quot;} {:command &quot;(defn testerPipe []\n  (getPipe a b)\n  (getPipe b c))&quot;, :offset 52, :ns &quot;discourje.twoBuyerProtocol.pipes.ScribbleReplicate&quot;} {:command &quot;(go (&gt;! a \&quot;haha\&quot;))&quot;, :offset 18, :ns &quot;discourje.twoBuyerProtocol.pipes.ScribbleReplicate&quot;} {:command &quot;(go (&gt;! c \&quot;haha\&quot;))&quot;, :offset 18, :ns &quot;discourje.twoBuyerProtocol.pipes.ScribbleReplicate&quot;} {:command &quot;(defn getPipe [to from operation]\n  (-&gt;pipeAndOp (pipeline 1 to (filter string?) from)\n               (go-loop []\n                  (&gt;! from operation)\n                 (recur))))&quot;, :offset 179, :ns &quot;discourje.twoBuyerProtocol.pipes.ScribbleReplicate&quot;} {:command &quot;(defn testerPipe []\n  (getPipe a b (str \&quot;test-a-b\&quot;))\n  (getPipe b c (str \&quot;test-b-c\&quot;)))&quot;, :offset 86, :ns &quot;discourje.twoBuyerProtocol.pipes.ScribbleReplicate&quot;} {:command &quot;(testerPipe)&quot;, :offset 12, :ns &quot;discourje.twoBuyerProtocol.pipes.ScribbleReplicate&quot;} {:command &quot;(close! a)&quot;, :offset 10, :ns &quot;discourje.twoBuyerProtocol.pipes.ScribbleReplicate&quot;} {:command &quot;(close! b)&quot;, :offset 10, :ns &quot;discourje.twoBuyerProtocol.pipes.ScribbleReplicate&quot;} {:command &quot;(close! c)&quot;, :offset 10, :ns &quot;discourje.twoBuyerProtocol.pipes.ScribbleReplicate&quot;}], :remote []}}</component>
  <component name="RunDashboard">
    <option name="ruleStates">
      <list>
        <RuleState>
          <option name="name" value="ConfigurationTypeDashboardGroupingRule" />
        </RuleState>
        <RuleState>
          <option name="name" value="StatusDashboardGroupingRule" />
        </RuleState>
      </list>
    </option>
  </component>
  <component name="RunManager" selected="Clojure REPL.LeiningenREPL">
    <configuration default="true" type="Applet" factoryName="Applet">
      <option name="POLICY_FILE" value="$APPLICATION_HOME_DIR$/bin/appletviewer.policy" />
      <method v="2">
        <option name="Make" enabled="true" />
      </method>
    </configuration>
    <configuration default="true" type="Application" factoryName="Application">
      <option name="WORKING_DIRECTORY" value="$PROJECT_DIR$" />
      <method v="2">
        <option name="Make" enabled="true" />
      </method>
    </configuration>
    <configuration name="LeiningenREPL" type="ClojureREPL" factoryName="Local">
      <module name="discourje" />
      <setting name="replType" value="1" />
      <setting name="jvmArgs" value="" />
      <setting name="parameters" value="" />
      <setting name="workingDir" value="$PROJECT_DIR$" />
      <setting name="profiles" value="" />
      <method v="2" />
    </configuration>
    <configuration name="core" type="ClojureScriptRunConfiguration" factoryName="Clojure Script" temporary="true">
      <module name="discourje" />
      <setting name="path" value="$PROJECT_DIR$/src/discourje/core.clj" />
      <setting name="namespace" value="" />
      <setting name="useLein" value="false" />
      <setting name="profiles" value="" />
      <setting name="vmparams" value="" />
      <setting name="params" value="" />
      <setting name="workDir" value="$PROJECT_DIR$/src/discourje" />
      <method v="2" />
    </configuration>
    <configuration default="true" type="JUnit" factoryName="JUnit">
      <option name="WORKING_DIRECTORY" value="%MODULE_WORKING_DIR%" />
      <method v="2">
        <option name="Make" enabled="true" />
      </method>
    </configuration>
    <configuration default="true" type="TestNG" factoryName="TestNG">
      <option name="WORKING_DIRECTORY" value="%MODULE_WORKING_DIR%" />
      <properties />
      <listeners />
      <method v="2">
        <option name="Make" enabled="true" />
      </method>
    </configuration>
    <configuration default="true" type="#org.jetbrains.idea.devkit.run.PluginConfigurationType" factoryName="Plugin">
      <module name="" />
      <option name="VM_PARAMETERS" value="-Xmx512m -Xms256m -XX:MaxPermSize=250m -ea" />
      <option name="PROGRAM_PARAMETERS" />
      <predefined_log_file id="idea.log" enabled="true" />
      <method v="2">
        <option name="Make" enabled="true" />
      </method>
    </configuration>
    <list>
      <item itemvalue="Clojure REPL.LeiningenREPL" />
      <item itemvalue="Clojure Application.core" />
    </list>
    <recent_temporary>
      <list>
        <item itemvalue="Clojure Application.core" />
      </list>
    </recent_temporary>
  </component>
  <component name="SvnConfiguration">
    <configuration />
  </component>
  <component name="TaskManager">
    <task active="true" id="Default" summary="Default task">
      <changelist id="6fdd3211-89b6-43e6-86ae-60249c672f12" name="Default" comment="" />
      <created>1536557417867</created>
      <option name="number" value="Default" />
      <option name="presentableId" value="Default" />
      <updated>1536557417867</updated>
      <workItem from="1539713803079" duration="1994000" />
      <workItem from="1539747589162" duration="5625000" />
    </task>
    <servers />
  </component>
  <component name="TimeTrackingManager">
    <option name="totallyTimeSpent" value="7619000" />
  </component>
  <component name="ToolWindowManager">
    <frame x="1366" y="-2" width="1920" height="1082" extended-state="6" />
    <layout>
      <window_info content_ui="combo" id="Project" order="0" visible="true" weight="0.13233724" />
      <window_info id="Structure" order="1" weight="0.25" />
      <window_info id="Capture Tool" order="2" />
      <window_info id="Image Layers" order="3" />
      <window_info id="Designer" order="4" />
      <window_info id="UI Designer" order="5" />
      <window_info id="Favorites" order="6" side_tool="true" />
      <window_info anchor="bottom" id="Message" order="0" />
      <window_info anchor="bottom" id="Find" order="1" />
      <window_info anchor="bottom" id="Run" order="2" weight="0.32948583" />
      <window_info anchor="bottom" id="Debug" order="3" weight="0.44596013" />
      <window_info anchor="bottom" id="Cvs" order="4" weight="0.25" />
      <window_info anchor="bottom" id="Inspection" order="5" weight="0.4" />
      <window_info anchor="bottom" id="TODO" order="6" />
      <window_info anchor="bottom" id="Terminal" order="7" />
      <window_info anchor="bottom" id="Event Log" order="8" side_tool="true" />
      <window_info anchor="bottom" id="Version Control" internal_type="SLIDING" order="9" type="SLIDING" weight="0.21091291" />
      <window_info anchor="bottom" id="Messages" order="10" />
      <window_info anchor="bottom" id="Database Changes" order="11" show_stripe_button="false" />
      <window_info anchor="right" id="Commander" order="0" weight="0.4" />
      <window_info anchor="right" id="Ant Build" order="1" weight="0.25" />
      <window_info anchor="right" content_ui="combo" id="Hierarchy" order="2" weight="0.25" />
      <window_info anchor="right" id="Capture Analysis" order="3" />
      <window_info anchor="right" id="Theme Preview" order="4" />
      <window_info active="true" anchor="right" id="REPL" order="5" side_tool="true" visible="true" weight="0.3094984" />
      <window_info anchor="right" id="Leiningen" order="6" />
      <window_info anchor="right" id="Palette&#9;" order="7" />
      <window_info anchor="right" id="Palette" order="8" />
      <window_info anchor="right" id="Maven Projects" order="9" />
      <window_info anchor="right" id="Database" order="10" />
    </layout>
    <layout-to-restore>
      <window_info content_ui="combo" id="Project" order="0" visible="true" weight="0.25" />
      <window_info id="Structure" order="1" weight="0.25" />
      <window_info id="Capture Tool" order="2" />
      <window_info id="Designer" order="3" />
      <window_info id="UI Designer" order="4" />
      <window_info id="Image Layers" order="5" />
      <window_info id="Favorites" order="6" side_tool="true" />
      <window_info anchor="bottom" id="Message" order="0" />
      <window_info anchor="bottom" id="Find" order="1" />
      <window_info anchor="bottom" id="Run" order="2" weight="0.32948583" />
      <window_info anchor="bottom" id="Debug" order="3" weight="0.44596013" />
      <window_info anchor="bottom" id="Cvs" order="4" weight="0.25" />
      <window_info anchor="bottom" id="Inspection" order="5" weight="0.4" />
      <window_info anchor="bottom" id="TODO" order="6" />
      <window_info anchor="bottom" id="Event Log" order="7" side_tool="true" />
      <window_info anchor="bottom" id="Messages" order="8" />
      <window_info anchor="bottom" id="Version Control" internal_type="SLIDING" order="9" type="SLIDING" weight="0.21091291" />
      <window_info anchor="bottom" id="Terminal" order="10" />
      <window_info anchor="right" id="Commander" order="0" weight="0.4" />
      <window_info anchor="right" id="Ant Build" order="1" weight="0.25" />
      <window_info anchor="right" content_ui="combo" id="Hierarchy" order="2" weight="0.25" />
      <window_info anchor="right" id="Palette" order="3" />
      <window_info anchor="right" id="Maven Projects" order="4" />
      <window_info anchor="right" id="REPL" order="5" side_tool="true" visible="true" weight="0.3234375" />
      <window_info anchor="right" id="Leiningen" order="6" />
      <window_info anchor="right" id="Palette&#9;" order="7" />
      <window_info anchor="right" id="Capture Analysis" order="8" />
      <window_info anchor="right" id="Theme Preview" order="9" />
    </layout-to-restore>
  </component>
  <component name="TypeScriptGeneratedFilesManager">
    <option name="version" value="1" />
  </component>
  <component name="VcsContentAnnotationSettings">
    <option name="myLimit" value="2678400000" />
  </component>
  <component name="editorHistoryManager">
    <entry file="file://$PROJECT_DIR$/target/classes/META-INF/maven/discourje/discourje/pom.properties">
      <provider selected="true" editor-type-id="text-editor" />
    </entry>
    <entry file="file://$PROJECT_DIR$/test/discourje/experimentsTests.clj">
      <provider selected="true" editor-type-id="text-editor">
        <state relative-caret-position="289">
          <caret line="17" column="25" selection-start-line="17" selection-start-column="25" selection-end-line="17" selection-end-column="25" />
        </state>
      </provider>
    </entry>
    <entry file="file://$PROJECT_DIR$/src/discourje/core.clj">
      <provider selected="true" editor-type-id="text-editor">
        <state relative-caret-position="136">
          <caret line="8" column="21" selection-start-line="8" selection-start-column="21" selection-end-line="8" selection-end-column="21" />
        </state>
      </provider>
    </entry>
    <entry file="file://$PROJECT_DIR$/project.clj">
      <provider selected="true" editor-type-id="text-editor">
        <state relative-caret-position="102">
          <caret line="6" column="43" selection-start-line="6" selection-start-column="30" selection-end-line="6" selection-end-column="43" />
        </state>
      </provider>
    </entry>
    <entry file="file://$PROJECT_DIR$/.nrepl-port">
      <provider selected="true" editor-type-id="text-editor" />
    </entry>
    <entry file="file://$PROJECT_DIR$/CHANGELOG.md">
      <provider selected="true" editor-type-id="split-provider[text-editor;markdown-preview-editor]">
        <state split_layout="SPLIT">
          <first_editor />
          <second_editor />
        </state>
      </provider>
    </entry>
    <entry file="file://$PROJECT_DIR$/Discourje.iml">
      <provider selected="true" editor-type-id="text-editor" />
    </entry>
    <entry file="file://$PROJECT_DIR$/LICENSE">
      <provider selected="true" editor-type-id="text-editor" />
    </entry>
    <entry file="file://$PROJECT_DIR$/resources/Meeting011018.md">
      <provider selected="true" editor-type-id="split-provider[text-editor;markdown-preview-editor]">
        <state split_layout="SPLIT">
          <first_editor />
          <second_editor />
        </state>
      </provider>
    </entry>
    <entry file="file://$PROJECT_DIR$/.hgignore" />
    <entry file="file://$PROJECT_DIR$/doc/TwooBuyerProtocol.png" />
    <entry file="jar://$MAVEN_REPOSITORY$/org/clojure/core.async/0.4.474/core.async-0.4.474.jar!/cljs/core/async/impl/protocols.cljs">
      <provider selected="true" editor-type-id="text-editor">
        <state>
          <caret line="21" column="19" lean-forward="true" selection-start-line="21" selection-start-column="19" selection-end-line="21" selection-end-column="19" />
        </state>
      </provider>
    </entry>
    <entry file="jar://$MAVEN_REPOSITORY$/org/clojure/core.async/0.4.474/core.async-0.4.474.jar!/cljs/core/async/impl/channels.cljs">
      <provider selected="true" editor-type-id="text-editor">
        <state relative-caret-position="-2741">
          <caret line="12" lean-forward="true" selection-start-line="12" selection-end-line="12" />
        </state>
      </provider>
    </entry>
    <entry file="jar://$MAVEN_REPOSITORY$/org/clojure/core.async/0.4.474/core.async-0.4.474.jar!/cljs/core/async/impl/ioc_helpers.cljs">
      <provider selected="true" editor-type-id="text-editor">
        <state relative-caret-position="-1962">
          <caret line="11" lean-forward="true" selection-start-line="11" selection-end-line="11" />
        </state>
      </provider>
    </entry>
    <entry file="jar://$MAVEN_REPOSITORY$/org/clojure/core.async/0.4.474/core.async-0.4.474.jar!/cljs/core/async/impl/ioc_macros.clj">
      <provider selected="true" editor-type-id="text-editor">
        <state relative-caret-position="-2499">
          <caret line="12" column="33" lean-forward="true" selection-start-line="12" selection-start-column="33" selection-end-line="12" selection-end-column="33" />
        </state>
      </provider>
    </entry>
    <entry file="jar://$MAVEN_REPOSITORY$/org/clojure/core.async/0.4.474/core.async-0.4.474.jar!/clojure/core/async/impl/protocols.clj">
      <provider selected="true" editor-type-id="text-editor">
        <state relative-caret-position="391">
          <caret line="23" lean-forward="true" selection-start-line="23" selection-end-line="23" />
        </state>
      </provider>
    </entry>
    <entry file="file://$PROJECT_DIR$/src/ProjectSetup/ProjectSetup.clj">
      <provider selected="true" editor-type-id="text-editor">
        <state relative-caret-position="187">
          <caret line="11" column="14" selection-start-line="11" selection-start-column="14" selection-end-line="11" selection-end-column="14" />
        </state>
      </provider>
    </entry>
    <entry file="jar://$MAVEN_REPOSITORY$/org/clojure/clojure/1.8.0/clojure-1.8.0.jar!/clojure/core.clj">
      <provider selected="true" editor-type-id="text-editor">
        <state relative-caret-position="145">
          <caret line="640" column="6" selection-start-line="640" selection-start-column="6" selection-end-line="640" selection-end-column="6" />
        </state>
      </provider>
    </entry>
    <entry file="file://$PROJECT_DIR$/src/discourje/threeBuyerProtocol/ThreeBuyerProtocol.clj">
      <provider selected="true" editor-type-id="text-editor">
        <state relative-caret-position="196">
          <caret line="14" selection-start-line="14" selection-end-line="14" />
        </state>
      </provider>
    </entry>
    <entry file="file://$PROJECT_DIR$/src/discourje/experiments/experiments.clj">
      <provider selected="true" editor-type-id="text-editor">
        <state relative-caret-position="196">
          <caret line="15" selection-start-line="15" selection-end-line="15" />
        </state>
      </provider>
    </entry>
    <entry file="file://$PROJECT_DIR$/doc/TwoBuyerProtocol.png">
      <provider selected="true" editor-type-id="images" />
    </entry>
    <entry file="file://$PROJECT_DIR$/test/discourje/tbpTests/pipesTests/buyer2Tests].clj" />
    <entry file="file://$PROJECT_DIR$/test/discourje/core_test.clj">
      <provider selected="true" editor-type-id="text-editor">
        <state relative-caret-position="34">
          <caret line="2" selection-start-line="2" selection-end-line="2" />
        </state>
      </provider>
    </entry>
    <entry file="file://$PROJECT_DIR$/test/discourje/tbpTests/TBPTests.clj">
      <provider selected="true" editor-type-id="text-editor">
        <state relative-caret-position="119">
          <caret line="7" column="6" selection-start-line="7" selection-start-column="6" selection-end-line="7" selection-end-column="6" />
        </state>
      </provider>
    </entry>
    <entry file="file://$PROJECT_DIR$/test/discourje/tbpTests/pipesTests/buyer2Tests.clj">
      <provider selected="true" editor-type-id="text-editor">
        <state relative-caret-position="68">
          <caret line="4" selection-start-line="4" selection-end-line="4" />
        </state>
      </provider>
    </entry>
    <entry file="file://$PROJECT_DIR$/test/discourje/tbpTests/pipesTests/participantTests.clj">
      <provider selected="true" editor-type-id="text-editor">
        <state relative-caret-position="34">
          <caret line="2" selection-start-line="2" selection-end-line="2" />
        </state>
      </provider>
    </entry>
    <entry file="file://$PROJECT_DIR$/test/discourje/tbpTests/pipesTests/sellerTests.clj">
      <provider selected="true" editor-type-id="text-editor">
        <state>
          <caret selection-end-line="3" selection-end-column="90" />
        </state>
      </provider>
    </entry>
    <entry file="file://$PROJECT_DIR$/test/discourje/tbpTests/pipesTests/buyer1Tests.clj">
      <provider selected="true" editor-type-id="text-editor">
        <state relative-caret-position="238">
          <caret line="14" column="34" selection-start-line="14" selection-start-column="34" selection-end-line="14" selection-end-column="34" />
        </state>
      </provider>
    </entry>
    <entry file="file://$PROJECT_DIR$/test/discourje/tbpTests/pipesTests/utilTests.clj">
      <provider selected="true" editor-type-id="text-editor">
        <state relative-caret-position="289">
          <caret line="17" selection-start-line="17" selection-end-line="17" />
        </state>
      </provider>
    </entry>
    <entry file="file://$PROJECT_DIR$/test/discourje/tbpTests/pipesTests/protoTests.clj">
      <provider selected="true" editor-type-id="text-editor">
        <state>
          <caret column="21" selection-start-column="21" selection-end-column="21" />
        </state>
      </provider>
    </entry>
    <entry file="file://$PROJECT_DIR$/src/discourje/twoBuyerProtocol/publishSubscribeExample/utilities.clj">
      <provider selected="true" editor-type-id="text-editor">
        <state relative-caret-position="901">
          <caret line="53" column="46" selection-start-line="28" selection-end-line="53" selection-end-column="46" />
        </state>
      </provider>
    </entry>
    <entry file="jar://$MAVEN_REPOSITORY$/org/clojure/core.async/0.4.474/core.async-0.4.474.jar!/clojure/core/async/impl/channels.clj">
      <provider selected="true" editor-type-id="text-editor">
        <state relative-caret-position="3754">
          <caret line="270" column="14" lean-forward="true" selection-start-line="270" selection-start-column="14" selection-end-line="270" selection-end-column="14" />
        </state>
      </provider>
    </entry>
    <entry file="jar://$MAVEN_REPOSITORY$/org/clojure/core.async/0.4.474/core.async-0.4.474.jar!/clojure/core/async.clj">
      <provider selected="true" editor-type-id="text-editor">
        <state relative-caret-position="218">
          <caret line="87" column="17" selection-start-line="87" selection-start-column="17" selection-end-line="87" selection-end-column="17" />
        </state>
      </provider>
    </entry>
    <entry file="file://$PROJECT_DIR$/src/discourje/twoBuyerProtocol/pipes/participant.clj">
      <provider selected="true" editor-type-id="text-editor">
        <state relative-caret-position="306">
          <caret line="18" column="46" selection-start-line="18" selection-start-column="46" selection-end-line="18" selection-end-column="46" />
        </state>
      </provider>
    </entry>
    <entry file="file://$PROJECT_DIR$/test/projectSetup/ProjectSetupTests.clj">
      <provider selected="true" editor-type-id="text-editor">
        <state relative-caret-position="153">
          <caret line="9" selection-start-line="9" selection-end-line="9" />
        </state>
      </provider>
    </entry>
    <entry file="file://$PROJECT_DIR$/test/projectSetup/testCheckConfig.clj">
      <provider selected="true" editor-type-id="text-editor">
        <state relative-caret-position="238">
          <caret line="14" lean-forward="true" selection-start-line="14" selection-end-line="14" />
        </state>
      </provider>
    </entry>
    <entry file="file://$PROJECT_DIR$/src/ProjectSetup/testCheck.clj" />
    <entry file="file://$PROJECT_DIR$/src/discourje/experiments/refs.clj">
      <provider selected="true" editor-type-id="text-editor">
        <state relative-caret-position="195">
          <caret line="13" column="22" selection-start-line="13" selection-start-column="11" selection-end-line="13" selection-end-column="22" />
        </state>
      </provider>
    </entry>
    <entry file="file://$PROJECT_DIR$/src/discourje/twoBuyerProtocol/pipes/util.clj">
      <provider selected="true" editor-type-id="text-editor">
        <state>
          <caret selection-end-line="1" selection-end-column="56" />
        </state>
      </provider>
    </entry>
    <entry file="file://$PROJECT_DIR$/test/discourje/abstractionExperiments_test.clj">
      <provider selected="true" editor-type-id="text-editor">
        <state relative-caret-position="60">
          <caret line="4" column="76" selection-start-line="4" selection-start-column="65" selection-end-line="4" selection-end-column="76" />
        </state>
      </provider>
    </entry>
    <entry file="file://$PROJECT_DIR$/src/discourje/twoBuyerProtocol/pipes/proto.clj">
      <provider selected="true" editor-type-id="text-editor">
        <state relative-caret-position="315">
          <caret line="21" column="23" selection-start-line="20" selection-start-column="2" selection-end-line="21" selection-end-column="23" />
        </state>
      </provider>
    </entry>
    <entry file="file://$PROJECT_DIR$/src/discourje/twoBuyerProtocol/publishSubscribeExample/twoBuyerProtocolPubSub.clj">
      <provider selected="true" editor-type-id="text-editor">
        <state relative-caret-position="180">
          <caret line="12" column="62" selection-start-line="12" selection-start-column="62" selection-end-line="12" selection-end-column="62" />
        </state>
      </provider>
    </entry>
    <entry file="file://$PROJECT_DIR$/test/async/examples/asyncExamples.clj">
      <provider selected="true" editor-type-id="text-editor">
        <state relative-caret-position="345">
          <caret line="23" selection-start-line="23" selection-end-line="23" />
        </state>
      </provider>
    </entry>
    <entry file="file://$PROJECT_DIR$/test/async/examples/asyncExperiments.clj">
      <provider selected="true" editor-type-id="text-editor">
        <state relative-caret-position="8595">
          <caret line="573" selection-start-line="573" selection-end-line="573" />
        </state>
      </provider>
    </entry>
    <entry file="file://$PROJECT_DIR$/src/discourje/twoBuyerProtocol/pipes/participants/seller.clj">
      <provider selected="true" editor-type-id="text-editor">
        <state relative-caret-position="90">
          <caret line="6" column="17" selection-start-line="6" selection-start-column="17" selection-end-line="6" selection-end-column="17" />
        </state>
      </provider>
    </entry>
    <entry file="file://$PROJECT_DIR$/src/discourje/twoBuyerProtocol/pipes/participants/buyer1.clj">
      <provider selected="true" editor-type-id="text-editor">
        <state relative-caret-position="150">
          <caret line="10" selection-start-line="10" selection-end-line="10" />
        </state>
      </provider>
    </entry>
    <entry file="file://$PROJECT_DIR$/src/discourje/twoBuyerProtocol/pipes/participants/buyer2.clj">
      <provider selected="true" editor-type-id="text-editor">
        <state relative-caret-position="150">
          <caret line="10" column="18" selection-start-line="10" selection-start-column="18" selection-end-line="10" selection-end-column="18" />
        </state>
      </provider>
    </entry>
    <entry file="file:///tmp/form-init7300701724368649027.clj">
      <provider selected="true" editor-type-id="text-editor">
        <state>
          <caret column="53" selection-start-column="53" selection-end-column="53" />
        </state>
      </provider>
    </entry>
    <entry file="file://$PROJECT_DIR$/src/discourje/experiments/abstractionExperiments.clj">
      <provider selected="true" editor-type-id="text-editor">
        <state relative-caret-position="330">
          <caret line="22" column="50" lean-forward="true" selection-start-line="22" selection-start-column="50" selection-end-line="22" selection-end-column="50" />
        </state>
      </provider>
    </entry>
    <entry file="file://$PROJECT_DIR$/src/discourje/twoBuyerProtocol/pipes/ScribbleReplicate.clj">
      <provider selected="true" editor-type-id="text-editor">
        <state relative-caret-position="224">
          <caret line="28" column="33" lean-forward="true" selection-start-line="28" selection-start-column="33" selection-end-line="28" selection-end-column="33" />
        </state>
      </provider>
    </entry>
    <entry file="file://$PROJECT_DIR$/src/discourje/twoBuyerProtocol/pipes/simpleSetup.clj">
      <provider selected="true" editor-type-id="text-editor">
        <state relative-caret-position="240">
          <caret line="22" lean-forward="true" selection-start-line="22" selection-end-line="22" />
        </state>
      </provider>
    </entry>
  </component>
  <component name="masterDetails">
    <states>
      <state key="ArtifactsStructureConfigurable.UI">
        <settings>
          <artifact-editor />
          <splitter-proportions>
            <option name="proportions">
              <list>
                <option value="0.2" />
              </list>
            </option>
          </splitter-proportions>
        </settings>
      </state>
      <state key="FacetStructureConfigurable.UI">
        <settings>
          <last-edited>No facets are configured</last-edited>
          <splitter-proportions>
            <option name="proportions">
              <list>
                <option value="0.2" />
              </list>
            </option>
          </splitter-proportions>
        </settings>
      </state>
      <state key="GlobalLibrariesConfigurable.UI">
        <settings>
          <splitter-proportions>
            <option name="proportions">
              <list>
                <option value="0.2" />
              </list>
            </option>
          </splitter-proportions>
        </settings>
      </state>
      <state key="JdkListConfigurable.UI">
        <settings>
          <last-edited>IDE SDK</last-edited>
          <splitter-proportions>
            <option name="proportions">
              <list>
                <option value="0.2" />
              </list>
            </option>
          </splitter-proportions>
        </settings>
      </state>
      <state key="ModuleStructureConfigurable.UI">
        <settings>
          <last-edited>discourje</last-edited>
          <splitter-proportions>
            <option name="proportions">
              <list>
                <option value="0.2" />
              </list>
            </option>
          </splitter-proportions>
        </settings>
      </state>
      <state key="ProjectJDKs.UI">
        <settings>
          <last-edited>IDE SDK</last-edited>
          <splitter-proportions>
            <option name="proportions">
              <list>
                <option value="0.2" />
              </list>
            </option>
          </splitter-proportions>
        </settings>
      </state>
      <state key="ProjectLibrariesConfigurable.UI">
        <settings>
          <last-edited>Leiningen: clojure-complete:0.2.4</last-edited>
          <splitter-proportions>
            <option name="proportions">
              <list>
                <option value="0.2" />
              </list>
            </option>
          </splitter-proportions>
        </settings>
      </state>
    </states>
  </component>
</project>